{"ast":null,"code":"import { AcGameObject } from \"./AcGameObject\";\nimport { Cell } from \"./Cell\";\nexport class Snake extends AcGameObject {\n  constructor(info, gamemap) {\n    super();\n    this.id = info.id;\n    this.color = info.color;\n    this.cells = [new Cell(info.r, info.c)]; //存放蛇的身体，cell[0]存放蛇头\n    this.gamemap = gamemap;\n    this.next_cell = null; //下一个要走的格子\n\n    this.speed = 5; //蛇每秒走5个格子\n    this.direction = -1; //蛇的方向，-1表示没有指令，0表示上，1表示右，2表示下，3表示左\n    this.status = \"idle\"; //蛇的状态，idle表示静止，move表示移动中，die表示死亡\n\n    this.dr = [-1, 0, 1, 0]; //4个方向的行偏移\n    this.dc = [0, 1, 0, -1]; //4个方向的列偏移\n\n    this.step = 0; // 表示回合数\n\n    this.eps = 1e-2; //允许的误差\n\n    this.eye_direction = 0;\n    if (this.id === 1) this.eye_direction = 2; //左下角的蛇眼睛朝上，右上角的蛇眼睛朝下\n\n    this.eye_dx = [[], []];\n  }\n  start() {}\n  set_direction(d) {\n    //设置蛇的方向\n    this.direction = d;\n  }\n  check_tail_increasing() {\n    if (this.step <= 10) return true;\n    if (this.step % 3 === 1) return true;\n    return false;\n  }\n  next_step() {\n    //将蛇的状态变为走下一步\n    const d = this.direction;\n    this.next_cell = new Cell(this.cells[0].r + this.dr[d], this.cells[0].c + this.dc[d]);\n    this.eye_direction = d;\n    this.direction = -1; //重置方向\n    this.status = \"move\";\n    this.step++;\n    const k = this.cells.length;\n    for (let i = k; i > 0; i--) {\n      this.cells[i] = JSON.parse(JSON.stringify(this.cells[i - 1]));\n    }\n    if (!this.gamemap.check_vaild(this.next_cell)) {\n      //下一步操作撞了，蛇瞬间去世\n      this.status = \"die\";\n    }\n  }\n  update_move() {\n    // this.cells[0].x += this.speed * this.timedelta / 1000;\n    const dx = this.next_cell.x - this.cells[0].x;\n    const dy = this.next_cell.y - this.cells[0].y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance < this.eps) {\n      this.cells[0] = this.next_cell; //更新蛇头\n      this.next_cell = null;\n      this.status = \"idle\"; //走完了，停下来\n\n      if (!this.check_tail_increasing()) {\n        this.cells.pop(); //删除蛇尾\n      }\n    } else {\n      const move_distance = this.speed * this.timedelta / 1000; //两帧之间的距离\n      this.cells[0].x += dx / distance * move_distance;\n      this.cells[0].y += dy / distance * move_distance;\n      if (!this.check_tail_increasing()) {\n        const k = this.cells.length;\n        const tail = this.cells[k - 1],\n          tail_target = this.cells[k - 2];\n        const tail_dx = tail_target.x - tail.x;\n        const tail_dy = tail_target.y - tail.y;\n        tail.x += move_distance * tail_dx / distance;\n        tail.y += move_distance * tail_dy / distance;\n      }\n    }\n  }\n  update() {\n    //每一帧执行一次\n    if (this.status == \"move\") {\n      this.update_move();\n    }\n    this.render();\n  }\n  render() {\n    const L = this.gamemap.L;\n    const ctx = this.gamemap.ctx;\n    ctx.fillStyle = this.color;\n    if (this.status === \"die\") {\n      ctx.fillStyle = \"gray\";\n    }\n    for (const cell of this.cells) {\n      ctx.beginPath();\n      ctx.arc(cell.x * L, cell.y * L, L / 2 * 0.8, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n    for (let i = 1; i < this.cells.length; i++) {\n      const a = this.cells[i - 1],\n        b = this.cells[i];\n      if (Math.abs(a.x - b.x) < this.eps && Math.abs(a.y - b.y) < this.eps) continue;\n      if (Math.abs(a.x - b.x) < this.eps) {\n        ctx.fillRect((a.x - 0.4) * L, Math.min(a.y, b.y) * L, L * 0.8, Math.abs(a.y - b.y) * L);\n      } else {\n        ctx.fillRect(Math.min(a.x, b.x) * L, (a.y - 0.4) * L, Math.abs(a.x - b.x) * L, L * 0.8);\n      }\n    }\n  }\n}","map":{"version":3,"names":["AcGameObject","Cell","Snake","constructor","info","gamemap","id","color","cells","r","c","next_cell","speed","direction","status","dr","dc","step","eps","eye_direction","eye_dx","start","set_direction","d","check_tail_increasing","next_step","k","length","i","JSON","parse","stringify","check_vaild","update_move","dx","x","dy","y","distance","Math","sqrt","pop","move_distance","timedelta","tail","tail_target","tail_dx","tail_dy","update","render","L","ctx","fillStyle","cell","beginPath","arc","PI","fill","a","b","abs","fillRect","min"],"sources":["D:/JavaProjects/kob/web/src/assets/scripts/Snake.js"],"sourcesContent":["import { AcGameObject } from \"./AcGameObject\";\r\nimport { Cell } from \"./Cell\";\r\n\r\nexport class Snake extends AcGameObject {\r\n    constructor(info, gamemap) {\r\n        super();\r\n\r\n        this.id = info.id;\r\n        this.color = info.color;\r\n        this.cells = [new Cell(info.r, info.c)]; //存放蛇的身体，cell[0]存放蛇头\r\n        this.gamemap = gamemap;\r\n\r\n        this.next_cell = null; //下一个要走的格子\r\n\r\n        this.speed = 5; //蛇每秒走5个格子\r\n        this.direction = -1; //蛇的方向，-1表示没有指令，0表示上，1表示右，2表示下，3表示左\r\n        this.status = \"idle\"; //蛇的状态，idle表示静止，move表示移动中，die表示死亡\r\n\r\n        this.dr = [-1, 0, 1, 0]; //4个方向的行偏移\r\n        this.dc = [0, 1, 0, -1]; //4个方向的列偏移\r\n\r\n        this.step = 0; // 表示回合数\r\n\r\n        this.eps = 1e-2; //允许的误差\r\n\r\n        this.eye_direction = 0;\r\n        if (this.id === 1) this.eye_direction = 2; //左下角的蛇眼睛朝上，右上角的蛇眼睛朝下\r\n\r\n        this.eye_dx = [\r\n            [],\r\n            [],\r\n        ]\r\n    }\r\n\r\n    start() { \r\n\r\n    }\r\n\r\n    set_direction(d) { //设置蛇的方向\r\n        this.direction = d; \r\n    }\r\n\r\n    check_tail_increasing () {\r\n        if (this.step <= 10) return true;\r\n        if (this.step % 3 === 1) return true;\r\n        return false;\r\n    }\r\n\r\n\r\n    next_step() { //将蛇的状态变为走下一步\r\n        const d = this.direction;\r\n        this.next_cell = new Cell(this.cells[0].r + this.dr[d], this.cells[0].c + this.dc[d]);\r\n        this.eye_direction = d;\r\n        this.direction = -1;//重置方向\r\n        this.status = \"move\";\r\n     \r\n        this.step ++;\r\n\r\n        const k = this.cells.length;\r\n        for (let i = k; i > 0; i--) {\r\n            this.cells[i] = JSON.parse(JSON.stringify(this.cells[i - 1]));\r\n        }\r\n\r\n        if (!this.gamemap.check_vaild(this.next_cell)) { //下一步操作撞了，蛇瞬间去世\r\n            this.status = \"die\";\r\n        }   \r\n\r\n    }\r\n\r\n    update_move() {\r\n        // this.cells[0].x += this.speed * this.timedelta / 1000;\r\n        const dx = this.next_cell.x - this.cells[0].x;\r\n        const dy = this.next_cell.y - this.cells[0].y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n        if (distance < this.eps) {\r\n            this.cells[0] = this.next_cell; //更新蛇头\r\n            this.next_cell = null;\r\n            this.status = \"idle\"; //走完了，停下来\r\n\r\n            if (!this.check_tail_increasing()) {\r\n                this.cells.pop(); //删除蛇尾\r\n            }\r\n        } else {\r\n            const move_distance = this.speed * this.timedelta / 1000; //两帧之间的距离\r\n            this.cells[0].x += dx / distance * move_distance;\r\n            this.cells[0].y += dy / distance * move_distance;\r\n\r\n            if (!this.check_tail_increasing()) {\r\n                const k = this.cells.length;\r\n                const tail = this.cells[k - 1], tail_target = this.cells[k - 2];\r\n                const tail_dx = tail_target.x - tail.x;\r\n                const tail_dy = tail_target.y - tail.y;\r\n\r\n                tail.x += move_distance * tail_dx / distance;\r\n                tail.y += move_distance * tail_dy / distance;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    update() { //每一帧执行一次\r\n        if (this.status == \"move\") {\r\n            this.update_move();\r\n        }          \r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        const L = this.gamemap.L;\r\n        const ctx = this.gamemap.ctx;\r\n\r\n        ctx.fillStyle = this.color;\r\n\r\n        if (this.status === \"die\") { \r\n            ctx.fillStyle = \"gray\";\r\n        }\r\n\r\n        for (const cell of this.cells) {\r\n            ctx.beginPath();\r\n            ctx.arc(cell.x * L, cell.y * L, L / 2 * 0.8, 0, 2 * Math.PI);\r\n            ctx.fill();\r\n        }\r\n\r\n        for (let i = 1; i < this.cells.length; i++) {\r\n            const a = this.cells[i - 1], b = this.cells[i];\r\n            \r\n            if (Math.abs(a.x - b.x) < this.eps && Math.abs(a.y - b.y) < this.eps) continue;\r\n\r\n            if (Math.abs(a.x - b.x) < this.eps) {\r\n                ctx.fillRect((a.x - 0.4) * L, Math.min(a.y, b.y) * L, L * 0.8 , Math.abs(a.y - b.y) * L);\r\n            } else {\r\n                ctx.fillRect(Math.min(a.x, b.x) * L, (a.y - 0.4) * L, Math.abs(a.x - b.x) * L, L * 0.8);\r\n            }\r\n        }\r\n\r\n    }\r\n }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}