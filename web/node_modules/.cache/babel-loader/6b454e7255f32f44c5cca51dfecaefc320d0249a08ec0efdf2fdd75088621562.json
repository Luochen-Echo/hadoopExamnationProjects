{"ast":null,"code":"import $ from 'jquery';\nexport default {\n  state: {\n    id: \"\",\n    username: \"\",\n    photo: \"\",\n    token: \"\",\n    is_login: false\n  },\n  getters: {},\n  mutations: {\n    updateUser(state, user) {\n      state.id = user.id;\n      state.username = user.username;\n      state.photo = user.photo;\n      state.is_login = user.is_login;\n    },\n    updateToken(state, token) {\n      state.token = token;\n    }\n  },\n  actions: {\n    login(context, data) {\n      $.ajax({\n        url: \"http://localhost:3001/user/account/token\",\n        type: \"post\",\n        data: {\n          username: data.username,\n          password: data.password\n        },\n        success(resp) {\n          if (resp.error_message === \"success\") {\n            context.commit(\"updateUser\", resp.token);\n            data.success(resp);\n          } else {\n            data.error(resp);\n          }\n        },\n        error(resp) {\n          data.error(resp);\n        }\n      });\n    },\n    getinfo(context, data) {\n      $.ajax({\n        url: \"http://localhost:3001/user/account/info\",\n        type: \"get\",\n        headers: {\n          'Authorization': 'Bearer ' + context.state.token\n        },\n        success(resp) {\n          if (resp.error_message === \"success\") {\n            context.commit(\"updateUser\", resp.user);\n            data.success(resp);\n          }\n        },\n        error(resp) {\n          data.error(resp);\n        }\n      });\n    }\n  },\n  modules: {}\n};","map":{"version":3,"names":["$","state","id","username","photo","token","is_login","getters","mutations","updateUser","user","updateToken","actions","login","context","data","ajax","url","type","password","success","resp","error_message","commit","error","getinfo","headers","modules"],"sources":["D:/JavaProjects/kob/web/src/store/user.js"],"sourcesContent":["import $ from 'jquery'\r\n\r\nexport default {\r\n    state: {\r\n        id: \"\",\r\n        username: \"\",\r\n        photo: \"\",\r\n        token: \"\",\r\n        is_login: false,\r\n    },\r\n    getters: {\r\n    },\r\n    mutations: {\r\n        updateUser(state, user) {\r\n            state.id = user.id;\r\n            state.username = user.username;\r\n            state.photo = user.photo;\r\n            state.is_login = user.is_login;\r\n        },\r\n\r\n        updateToken(state, token) {\r\n            state.token = token;\r\n        }\r\n\r\n    },\r\n    actions: {\r\n        login(context, data) {\r\n            $.ajax({\r\n                url: \"http://localhost:3001/user/account/token\",\r\n                type: \"post\",\r\n                data: {\r\n                    username: data.username,\r\n                    password: data.password,\r\n                },\r\n                success(resp) {\r\n                    if (resp.error_message === \"success\") {\r\n                        context.commit(\"updateUser\", resp.token);\r\n                        data.success(resp);\r\n                    } else {\r\n                        data.error(resp);\r\n                    }\r\n                },\r\n                error(resp) {\r\n                    data.error(resp);\r\n                }\r\n            });\r\n        },\r\n\r\n        getinfo(context, data) {\r\n            $.ajax({\r\n                url: \"http://localhost:3001/user/account/info\",\r\n                type: \"get\",\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + context.state.token,\r\n                },\r\n                success(resp) {\r\n                    if (resp.error_message === \"success\") {\r\n                        context.commit(\"updateUser\", resp.user);\r\n                        data.success(resp);\r\n                    }\r\n                },\r\n                error(resp) {\r\n                    data.error(resp);\r\n                }\r\n            });\r\n        }\r\n\r\n    },\r\n    modules: {\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AAEtB,eAAe;EACXC,KAAK,EAAE;IACHC,EAAE,EAAE,EAAE;IACNC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE;IACPC,UAAUA,CAACR,KAAK,EAAES,IAAI,EAAE;MACpBT,KAAK,CAACC,EAAE,GAAGQ,IAAI,CAACR,EAAE;MAClBD,KAAK,CAACE,QAAQ,GAAGO,IAAI,CAACP,QAAQ;MAC9BF,KAAK,CAACG,KAAK,GAAGM,IAAI,CAACN,KAAK;MACxBH,KAAK,CAACK,QAAQ,GAAGI,IAAI,CAACJ,QAAQ;IAClC,CAAC;IAEDK,WAAWA,CAACV,KAAK,EAAEI,KAAK,EAAE;MACtBJ,KAAK,CAACI,KAAK,GAAGA,KAAK;IACvB;EAEJ,CAAC;EACDO,OAAO,EAAE;IACLC,KAAKA,CAACC,OAAO,EAAEC,IAAI,EAAE;MACjBf,CAAC,CAACgB,IAAI,CAAC;QACHC,GAAG,EAAE,0CAA0C;QAC/CC,IAAI,EAAE,MAAM;QACZH,IAAI,EAAE;UACFZ,QAAQ,EAAEY,IAAI,CAACZ,QAAQ;UACvBgB,QAAQ,EAAEJ,IAAI,CAACI;QACnB,CAAC;QACDC,OAAOA,CAACC,IAAI,EAAE;UACV,IAAIA,IAAI,CAACC,aAAa,KAAK,SAAS,EAAE;YAClCR,OAAO,CAACS,MAAM,CAAC,YAAY,EAAEF,IAAI,CAAChB,KAAK,CAAC;YACxCU,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC;UACtB,CAAC,MAAM;YACHN,IAAI,CAACS,KAAK,CAACH,IAAI,CAAC;UACpB;QACJ,CAAC;QACDG,KAAKA,CAACH,IAAI,EAAE;UACRN,IAAI,CAACS,KAAK,CAACH,IAAI,CAAC;QACpB;MACJ,CAAC,CAAC;IACN,CAAC;IAEDI,OAAOA,CAACX,OAAO,EAAEC,IAAI,EAAE;MACnBf,CAAC,CAACgB,IAAI,CAAC;QACHC,GAAG,EAAE,yCAAyC;QAC9CC,IAAI,EAAE,KAAK;QACXQ,OAAO,EAAE;UACL,eAAe,EAAE,SAAS,GAAGZ,OAAO,CAACb,KAAK,CAACI;QAC/C,CAAC;QACDe,OAAOA,CAACC,IAAI,EAAE;UACV,IAAIA,IAAI,CAACC,aAAa,KAAK,SAAS,EAAE;YAClCR,OAAO,CAACS,MAAM,CAAC,YAAY,EAAEF,IAAI,CAACX,IAAI,CAAC;YACvCK,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC;UACtB;QACJ,CAAC;QACDG,KAAKA,CAACH,IAAI,EAAE;UACRN,IAAI,CAACS,KAAK,CAACH,IAAI,CAAC;QACpB;MACJ,CAAC,CAAC;IACN;EAEJ,CAAC;EACDM,OAAO,EAAE,CACT;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}