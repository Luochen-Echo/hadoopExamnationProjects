{"ast":null,"code":"import $ from 'jquery';\nexport default {\n  data() {\n    return {\n      fileList: []\n    };\n  },\n  mounted() {\n    $.ajax({\n      url: 'http://localhost:3001/hadoop/listfile/',\n      // 替换为你的后端接口\n      type: 'get',\n      data: {\n        HdfsPath: '/output'\n      },\n      headers: {\n        Authorization: 'Bearer ' + this.$store.state.user.token\n      },\n      success: resp => {\n        this.fileList = resp;\n      },\n      error: resp => {\n        console.error(resp);\n      }\n    });\n  },\n  methods: {\n    // download(filePath) {\n    //     $.ajax({\n    //         url: 'http://localhost:3001/hadoop/downloadfile/',\n    //         type: 'post',\n    //         data: {\n    //             HdfsFilePath: filePath,\n    //             loaclFilePath: 'C:\\\\Users\\\\20624\\\\Desktop\\\\' // 你的本地路径,默认下载到桌面\n    //         },\n    //         headers: {\n    //             Authorization: 'Bearer ' + this.$store.state.user.token\n    //         },\n    //         success: (resp) => {\n    //             alert(resp.message)\n    //         },\n    //         error: (resp) => {\n    //             console.error(resp)\n    //         }\n    //     })\n    // },\n    download(filePath) {\n      $.ajax({\n        url: 'http://localhost:3001/hadoop/download/',\n        type: 'post',\n        data: {\n          hdfsFilePath: filePath // 确保此处的变量名与你的后端接口匹配\n        },\n\n        headers: {\n          Authorization: 'Bearer ' + this.$store.state.user.token\n        },\n        xhrFields: {\n          responseType: 'blob' // 设置这一行将告诉jQuery，我们期望的响应类型为 Blob\n        },\n\n        success: function (resp) {\n          // 创建一个新的 Blob 对象使用下载的数据\n          let blob = new Blob([resp]);\n          let link = document.createElement('a');\n\n          // 使用 window.URL.createObjectURL() 方法创建对象的 URL\n          link.href = window.URL.createObjectURL(blob);\n\n          // 解析出文件名\n          let fileName = filePath.substring(filePath.lastIndexOf('/') + 1);\n\n          // 设置下载的文件名\n          link.download = fileName; // 使用你需要的文件名和扩展名\n\n          // 添加链接到页面，触发 'click' 事件开始下载\n          document.body.appendChild(link);\n          link.click();\n\n          // 清理：在下载开始后，移除链接并释放对象 URL\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(link.href);\n        },\n        error: function (resp) {\n          console.error(resp);\n        }\n      });\n    },\n    deleteFile(filePath) {\n      $.ajax({\n        url: 'http://localhost:3001/hadoop/delfile/',\n        type: 'delete',\n        data: {\n          filePath: filePath\n        },\n        headers: {\n          Authorization: 'Bearer ' + this.$store.state.user.token\n        },\n        success: resp => {\n          alert(resp.message);\n          if (resp.message === \"删除成功\") {\n            this.fileList = this.fileList.filter(file => file.filePath !== filePath);\n          }\n        },\n        error: resp => {\n          console.error(resp);\n        }\n      });\n    },\n    CommandOfWrodCount() {\n      $.ajax({\n        url: 'http://localhost:3001/command/wordcount',\n        type: 'get',\n        headers: {\n          Authorization: 'Bearer ' + this.$store.state.user.token\n        },\n        success: resp => {\n          alert(resp.message);\n        },\n        error: resp => {\n          console.error(resp);\n        }\n      });\n    },\n    resetwordcount() {\n      $.ajax({\n        url: 'http://localhost:3001/hadoop/resetwordcount',\n        type: 'get',\n        headers: {\n          Authorization: 'Bearer ' + this.$store.state.user.token\n        },\n        success: resp => {\n          alert(resp.message);\n        },\n        error: resp => {\n          console.error(resp);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["$","data","fileList","mounted","ajax","url","type","HdfsPath","headers","Authorization","$store","state","user","token","success","resp","error","console","methods","download","filePath","hdfsFilePath","xhrFields","responseType","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","fileName","substring","lastIndexOf","body","appendChild","click","removeChild","revokeObjectURL","deleteFile","alert","message","filter","file","CommandOfWrodCount","resetwordcount"],"sources":["F:\\hadoop\\hadoopExamnationProjects\\web\\src\\views\\record\\RecordindexView.vue"],"sourcesContent":["<template>\r\n    <div class=\"display container\">\r\n        <div class=\"file-list\">\r\n            <table class=\"table table-striped\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">文件名</th>\r\n                        <th scope=\"col\">大小</th>\r\n                        <th scope=\"col\">副本数量</th>\r\n                        <th scope=\"col\">上次修改时间</th>\r\n                        <th scope=\"col\">操作</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"file in fileList\" :key=\"file.filePath\">\r\n                        <td><span\r\n                                style=\"display: inline-block; width:330px; white-space: nowrap; overflow: hidden;text-overflow: ellipsis;\">{{\r\n                                    file.fileName }}</span></td>\r\n                        <td>{{ file.fileSize }}</td>\r\n                        <td>{{ file.numReplicas }}</td>\r\n                        <td>{{ file.lastModifiedTime }}</td>\r\n                        <td>\r\n                            <button class=\"btn btn-download\" @click=\"download(file.filePath)\">下载</button>\r\n                            <button class=\"btn btn-delete\" @click=\"deleteFile(file.filePath)\">删除</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"action-buttons\">\r\n        <button class=\"btn btn-wordcount\" @click=\"CommandOfWrodCount\">词频统计</button>\r\n        <button class=\"btn btn-reset\" @click=\"resetwordcount\">重置统计</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from 'jquery'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            fileList: []\r\n        }\r\n    },\r\n    mounted() {\r\n        $.ajax({\r\n            url: 'http://localhost:3001/hadoop/listfile/', // 替换为你的后端接口\r\n            type: 'get',\r\n            data: {\r\n                HdfsPath: '/output'\r\n            },\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.$store.state.user.token\r\n            },\r\n            success: (resp) => {\r\n                this.fileList = resp\r\n            },\r\n            error: (resp) => {\r\n                console.error(resp)\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        // download(filePath) {\r\n        //     $.ajax({\r\n        //         url: 'http://localhost:3001/hadoop/downloadfile/',\r\n        //         type: 'post',\r\n        //         data: {\r\n        //             HdfsFilePath: filePath,\r\n        //             loaclFilePath: 'C:\\\\Users\\\\20624\\\\Desktop\\\\' // 你的本地路径,默认下载到桌面\r\n        //         },\r\n        //         headers: {\r\n        //             Authorization: 'Bearer ' + this.$store.state.user.token\r\n        //         },\r\n        //         success: (resp) => {\r\n        //             alert(resp.message)\r\n        //         },\r\n        //         error: (resp) => {\r\n        //             console.error(resp)\r\n        //         }\r\n        //     })\r\n        // },\r\n        download(filePath) {\r\n            $.ajax({\r\n                url: 'http://localhost:3001/hadoop/download/',\r\n                type: 'post',\r\n                data: {\r\n                    hdfsFilePath: filePath, // 确保此处的变量名与你的后端接口匹配\r\n                },\r\n                headers: {\r\n                    Authorization: 'Bearer ' + this.$store.state.user.token\r\n                },\r\n                xhrFields: {\r\n                    responseType: 'blob' // 设置这一行将告诉jQuery，我们期望的响应类型为 Blob\r\n                },\r\n                success: function (resp) {\r\n                    // 创建一个新的 Blob 对象使用下载的数据\r\n                    let blob = new Blob([resp]);\r\n                    let link = document.createElement('a');\r\n\r\n                    // 使用 window.URL.createObjectURL() 方法创建对象的 URL\r\n                    link.href = window.URL.createObjectURL(blob);\r\n\r\n                    // 解析出文件名\r\n                    let fileName = filePath.substring(filePath.lastIndexOf('/') + 1);\r\n\r\n                    // 设置下载的文件名\r\n                    link.download = fileName; // 使用你需要的文件名和扩展名\r\n\r\n                    // 添加链接到页面，触发 'click' 事件开始下载\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n\r\n                    // 清理：在下载开始后，移除链接并释放对象 URL\r\n                    document.body.removeChild(link);\r\n                    window.URL.revokeObjectURL(link.href);\r\n                },\r\n                error: function (resp) {\r\n                    console.error(resp)\r\n                }\r\n            })\r\n        },\r\n\r\n        deleteFile(filePath) {\r\n            $.ajax({\r\n                url: 'http://localhost:3001/hadoop/delfile/',\r\n                type: 'delete',\r\n                data: {\r\n                    filePath: filePath\r\n                },\r\n                headers: {\r\n                    Authorization: 'Bearer ' + this.$store.state.user.token\r\n                },\r\n                success: (resp) => {\r\n                    alert(resp.message)\r\n                    if (resp.message === \"删除成功\") {\r\n                        this.fileList = this.fileList.filter(file => file.filePath !== filePath)\r\n                    }\r\n                },\r\n                error: (resp) => {\r\n                    console.error(resp)\r\n                }\r\n            })\r\n        },\r\n\r\n        CommandOfWrodCount() {\r\n            $.ajax({\r\n                url: 'http://localhost:3001/command/wordcount',\r\n                type: 'get',\r\n                headers: {\r\n                    Authorization: 'Bearer ' + this.$store.state.user.token\r\n                },\r\n                success: (resp) => {\r\n                    alert(resp.message)\r\n                },\r\n                error: (resp) => {\r\n                    console.error(resp)\r\n                }\r\n            })\r\n        },\r\n        resetwordcount() {\r\n            $.ajax({\r\n                url: 'http://localhost:3001/hadoop/resetwordcount',\r\n                type: 'get',\r\n                headers: {\r\n                    Authorization: 'Bearer ' + this.$store.state.user.token\r\n                },\r\n                success: (resp) => {\r\n                    alert(resp.message)\r\n                },\r\n                error: (resp) => {\r\n                    console.error(resp)\r\n                }\r\n            })\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv.display {\r\n    background-color: rgb(255, 255, 255);\r\n    width: 70vw;\r\n    height: 60vh;\r\n    margin: 40px auto;\r\n    overflow: auto;\r\n    box-sizing: border-box;\r\n}\r\n\r\ndiv.action-buttons {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.btn-wordcount,\r\n.btn-reset {\r\n    margin: 0 5px;\r\n    background-color: #7156cf;\r\n    color: white;\r\n    padding: 8px 12px;\r\n    width: auto;\r\n}\r\n\r\n\r\ndiv.file-list {\r\n    max-height: 50vh;\r\n    /* 设置文件列表最大高度为300px */\r\n    overflow-y: auto;\r\n    /* 添加滚动条，超出高度时显示滚动条 */\r\n}\r\n\r\n\r\n\r\n.btn-download {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n}\r\n\r\n.btn-delete {\r\n    margin-left: 15%;\r\n    background-color: #f44336;\r\n    color: white;\r\n}</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}