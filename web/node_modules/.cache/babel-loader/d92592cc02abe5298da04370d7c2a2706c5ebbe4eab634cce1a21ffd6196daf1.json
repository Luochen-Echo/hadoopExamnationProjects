{"ast":null,"code":"import $ from 'jquery';\nexport default {\n  data() {\n    return {\n      fileList: []\n    };\n  },\n  mounted() {\n    $.ajax({\n      url: 'http://localhost:3001/hadoop/listfile/',\n      // 替换为你的后端接口\n      type: 'get',\n      headers: {\n        Authorization: 'Bearer ' + this.$store.state.user.token\n      },\n      success: resp => {\n        this.fileList = resp;\n      },\n      error: resp => {\n        console.error(resp);\n      }\n    });\n  },\n  methods: {\n    download(filePath) {\n      $.ajax({\n        url: 'http://localhost:3001/hadoop/downloadfile/',\n        type: 'post',\n        data: {\n          HdfsFilePath: filePath,\n          loaclFilePath: 'C:\\\\Users\\\\20624\\\\Desktop\\\\' // 你的本地路径,默认下载到桌面\n        },\n\n        headers: {\n          Authorization: 'Bearer ' + this.$store.state.user.token\n        },\n        success: resp => {\n          alert(resp.message);\n        },\n        error: resp => {\n          console.error(resp);\n        }\n      });\n    },\n    deleteFile(filePath) {\n      $.ajax({\n        url: 'http://localhost:3001/hadoop/delfile/',\n        type: 'delete',\n        data: {\n          filePath: filePath\n        },\n        headers: {\n          Authorization: 'Bearer ' + this.$store.state.user.token\n        },\n        success: resp => {\n          alert(resp.message);\n          if (resp.message === \"删除成功\") {\n            this.fileList = this.fileList.filter(file => file.filePath !== filePath);\n          }\n        },\n        error: resp => {\n          console.error(resp);\n        }\n      });\n    },\n    clickUploadButton() {\n      this.$refs.fileInput.click();\n    },\n    uploadFile() {\n      if (!this.$refs.fileInput.files.length) {\n        alert('请先选择文件!');\n        return;\n      }\n      const file = this.$refs.fileInput.files[0]; // 获取选中的文件\n      const formData = new FormData(); // 创建一个 FormData 对象用于打包文件数据\n      formData.append('file', file); // 将文件添加到 FormData 对象中\n      $.ajax({\n        url: 'http://localhost:3001/hadoop/uploadfile/',\n        type: 'post',\n        data: formData,\n        headers: {\n          Authorization: 'Bearer ' + this.$store.state.user.token\n        },\n        processData: false,\n        // 告诉 jQuery 不要处理发送的数据\n        contentType: false,\n        // 告诉 jQuery 不要设置 Content-Type 请求头\n        success: resp => {\n          alert(resp.message);\n        },\n        error: resp => {\n          console.error(resp);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["$","data","fileList","mounted","ajax","url","type","headers","Authorization","$store","state","user","token","success","resp","error","console","methods","download","filePath","HdfsFilePath","loaclFilePath","alert","message","deleteFile","filter","file","clickUploadButton","$refs","fileInput","click","uploadFile","files","length","formData","FormData","append","processData","contentType"],"sources":["F:\\hadoop\\hadoopExamnationProjects\\web\\src\\views\\pk\\PkindexView.vue"],"sourcesContent":["<template>\r\n   <div class=\"display container\">\r\n    <table class=\"table table-striped\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">文件名</th>\r\n          <th scope=\"col\">大小</th>\r\n          <th scope=\"col\">副本数量</th>\r\n          <th scope=\"col\">上次修改时间</th>\r\n          <th scope=\"col\">操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"file in fileList\" :key=\"file.filePath\">\r\n          <td>{{ file.fileName }}</td>\r\n          <td>{{ file.fileSize }}</td>\r\n          <td>{{ file.numReplicas }}</td>\r\n          <td>{{ file.lastModifiedTime }}</td>\r\n          <td>\r\n            <button class=\"btn btn-download\" @click=\"download(file.filePath)\">下载</button>\r\n            <button class=\"btn btn btn-delete\" @click=\"deleteFile(file.filePath)\">删除</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n    <div class=\"upload\">\r\n            <input type=\"file\" ref=\"fileInput\" @change=\"uploadFile\" style=\"display: none\" />\r\n            <button class=\"btn btn-uploadload\" @click=\"clickUploadButton\">上传文件</button>\r\n        </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from 'jquery'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      fileList: []\r\n    }\r\n  },\r\n  mounted() {\r\n    $.ajax({\r\n      url: 'http://localhost:3001/hadoop/listfile/', // 替换为你的后端接口\r\n      type: 'get',\r\n      headers: {\r\n        Authorization: 'Bearer ' + this.$store.state.user.token\r\n      },\r\n      success: (resp) => {\r\n        this.fileList = resp\r\n      },\r\n      error: (resp) => {\r\n        console.error(resp)\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    download(filePath) {\r\n      $.ajax({\r\n        url: 'http://localhost:3001/hadoop/downloadfile/',\r\n        type: 'post',\r\n        data: {\r\n          HdfsFilePath: filePath,\r\n          loaclFilePath: 'C:\\\\Users\\\\20624\\\\Desktop\\\\' // 你的本地路径,默认下载到桌面\r\n        },\r\n        headers: {\r\n          Authorization: 'Bearer ' + this.$store.state.user.token\r\n        },\r\n        success: (resp) => {\r\n          alert(resp.message)\r\n        },\r\n        error: (resp) => {\r\n          console.error(resp)\r\n        }\r\n      })\r\n    },\r\n    deleteFile(filePath) {\r\n      $.ajax({\r\n        url: 'http://localhost:3001/hadoop/delfile/',\r\n        type: 'delete',\r\n        data: {\r\n          filePath: filePath\r\n        },\r\n        headers: {\r\n          Authorization: 'Bearer ' + this.$store.state.user.token\r\n        },\r\n        success: (resp) => {\r\n          alert(resp.message)\r\n          if (resp.message === \"删除成功\") {\r\n            this.fileList = this.fileList.filter(file => file.filePath !== filePath)\r\n          }\r\n        },\r\n        error: (resp) => {\r\n          console.error(resp)\r\n        }\r\n      })\r\n    },\r\n    clickUploadButton() {\r\n            this.$refs.fileInput.click();\r\n        },\r\n\r\n        uploadFile() {\r\n            if (!this.$refs.fileInput.files.length) {\r\n        alert('请先选择文件!');\r\n        return;\r\n    }\r\n            const file = this.$refs.fileInput.files[0]; // 获取选中的文件\r\n            const formData = new FormData(); // 创建一个 FormData 对象用于打包文件数据\r\n            formData.append('file', file); // 将文件添加到 FormData 对象中\r\n            $.ajax({\r\n                url: 'http://localhost:3001/hadoop/uploadfile/',\r\n                type: 'post',\r\n                data: formData,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + this.$store.state.user.token\r\n                },\r\n                processData: false, // 告诉 jQuery 不要处理发送的数据\r\n                contentType: false, // 告诉 jQuery 不要设置 Content-Type 请求头\r\n                success: (resp) => {\r\n                    alert(resp.message);\r\n                },\r\n                error: (resp) => {\r\n                    console.error(resp);\r\n                }\r\n            });\r\n        },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv.display {\r\n    background-color: rgb(255, 255, 255);\r\n    width: 70vw;\r\n    height: 60vh;\r\n    margin: 40px auto;\r\n\r\n}\r\n.btn-download {\r\n    margin-right: 30px;\r\n    background-color: #7156cf;  /* blue */\r\n    color: white;\r\n}\r\n\r\n.btn-delete {\r\n    background-color: #f44336; /* Red */\r\n    color: white;\r\n}\r\n\r\n.btn-upload {\r\n    margin-right: 30px;\r\n    background-color: #7156cf;  /* blue */\r\n    color: white;\r\n}\r\n\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}